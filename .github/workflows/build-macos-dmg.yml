name: Build macOS DMG

on:
  push:
    tags:
      - '*'  # Run only when a tag is pushed

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Get tag version
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install PyQt5 pyinstaller
        sudo apt-get update
        sudo apt-get install -y imagemagick
    
    - name: Create app icon
      run: |
        mkdir -p icons.iconset
        # Create a placeholder icon if none exists
        if [ ! -f app_icon.png ]; then
          convert -size 1024x1024 xc:none -fill "#0078d4" -draw "circle 512,512 512,256" -pointsize 512 -font Arial -gravity center -fill white -annotate 0 "TW" app_icon.png
        fi
    
    - name: Build application with PyInstaller
      run: |
        # Update version in app
        VERSION_PY="version.py"
        echo "VERSION = '${VERSION}'" > $VERSION_PY
        
        # Build a single-file executable instead of a directory
        pyinstaller --name="MSTeamsWaker" \
          --onefile \
          --add-data="README.md:." \
          --add-data="${VERSION_PY}:." \
          teams_waker_app.py
        
        # Debug output to see what PyInstaller created
        find dist -type f | sort
    
    - name: Create DMG using dmg-builder
      run: |
        # Install Node.js and dmg-builder
        curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash -
        sudo apt-get install -y nodejs
        sudo npm install -g appdmg
        
        # Create a directory structure for the DMG
        mkdir -p dmg_temp/MSTeamsWaker.app/Contents/MacOS
        mkdir -p dmg_temp/MSTeamsWaker.app/Contents/Resources
        
        # Copy the executable to the .app structure
        cp dist/MSTeamsWaker dmg_temp/MSTeamsWaker.app/Contents/MacOS/
        chmod +x dmg_temp/MSTeamsWaker.app/Contents/MacOS/MSTeamsWaker
        
        # Create Info.plist
        cat > dmg_temp/MSTeamsWaker.app/Contents/Info.plist << EOF
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>CFBundleExecutable</key>
            <string>MSTeamsWaker</string>
            <key>CFBundleIconFile</key>
            <string>AppIcon</string>
            <key>CFBundleIdentifier</key>
            <string>com.msteamswaker.app</string>
            <key>CFBundleInfoDictionaryVersion</key>
            <string>6.0</string>
            <key>CFBundleName</key>
            <string>MSTeamsWaker</string>
            <key>CFBundlePackageType</key>
            <string>APPL</string>
            <key>CFBundleShortVersionString</key>
            <string>${VERSION}</string>
            <key>CFBundleVersion</key>
            <string>${VERSION}</string>
            <key>LSMinimumSystemVersion</key>
            <string>10.13</string>
            <key>NSHighResolutionCapable</key>
            <true/>
        </dict>
        </plist>
        EOF
        
        # Copy icon if it exists
        if [ -f app_icon.png ]; then
          cp app_icon.png dmg_temp/MSTeamsWaker.app/Contents/Resources/AppIcon.icns
        fi
        
        # Create a background image
        convert -size 800x500 gradient:blue-black -font Arial -pointsize 36 -fill white -gravity center -annotate 0 "MS Teams Waker ${VERSION}\nDrag to Applications folder to install" background.png
        
        # Create appdmg config
        cat > appdmg.json << EOF
        {
          "title": "MS Teams Waker",
          "icon": "app_icon.png",
          "background": "background.png",
          "contents": [
            { "x": 448, "y": 344, "type": "link", "path": "/Applications" },
            { "x": 192, "y": 344, "type": "file", "path": "dmg_temp/MSTeamsWaker.app" }
          ]
        }
        EOF
        
        # Create DMG
        DMG_NAME="MSTeamsWaker-${VERSION}.dmg"
        appdmg appdmg.json "$DMG_NAME"
    
    - name: Upload DMG artifact
      uses: actions/upload-artifact@v4
      with:
        name: MSTeamsWaker-${{ env.VERSION }}
        path: MSTeamsWaker-${{ env.VERSION }}.dmg
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        files: MSTeamsWaker-${{ env.VERSION }}.dmg
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
